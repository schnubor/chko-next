{
    "root": true,
    "globals": {
        "NodeJS": true,
        "JSX": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "extends": ["eslint:recommended", "next/core-web-vitals", "prettier"],
    "plugins": ["unused-imports", "@typescript-eslint", "@stylistic"],
    "rules": {
        "no-unused-vars": "off", // we use @typescript-eslint/no-unused-vars to avoid conflicts with typescript
        "quotes": ["warn", "single", { "avoidEscape": true }],
        "curly": "warn",
        "@typescript-eslint/consistent-type-imports": "warn",
        "@typescript-eslint/no-unused-vars": ["error"],
        "newline-before-return": "warn",
        "no-use-before-define": ["error", "nofunc"],
        "unused-imports/no-unused-imports": "error",
        "react/jsx-curly-brace-presence": ["warn", { "props": "never", "children": "never" }],
        "prefer-arrow-callback": ["error", { "allowNamedFunctions": true }],
        "func-style": ["error", "expression", { "allowArrowFunctions": true }],
        "@stylistic/padding-line-between-statements": [
            "error",
            { "blankLine": "always", "prev": "*", "next": "if" },
            { "blankLine": "always", "prev": "*", "next": "try" },
            { "blankLine": "always", "prev": "*", "next": "switch" }
        ],
        "import/order": [
            "error",
            {
                "newlines-between": "always",
                "groups": [
                    "unknown", // <- unknown
                    "builtin", // Built-in imports go first
                    "external", // <- External imports
                    "internal", // <- Absolute imports
                    ["sibling", "parent"], // <- Relative imports, the sibling and parent types they can be mingled together
                    "object", // <- object imports
                    "index", // <- index imports
                    "type" // <- type imports
                ],
                "pathGroups": [
                    {
                        "pattern": "**/constants",
                        "group": "unknown",
                        "position": "before"
                    },
                    {
                        "pattern": "@/core/redux/store",
                        "group": "internal",
                        "position": "before"
                    }
                ],
                "alphabetize": {
                    /* sort in ascending order. Options: ["ignore", "asc", "desc"] */
                    "order": "asc",
                    /* ignore case. Options: [true, false] */
                    "caseInsensitive": true
                }
            }
        ],
        "id-length": ["error", { "min": 2, "exceptions": ["_", "t", "i"], "properties": "never" }]
    }
}
